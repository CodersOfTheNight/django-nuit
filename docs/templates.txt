Templates
=========

There are a number of templates provided with Nuit, intended to be extended by your own templates to provide the framework around your own content.

Extending the Nuit templates
----------------------------

In order to get the most functionality out of Nuit's templates, you need to extend them using Nuit's own ``extend`` template tag, not Django's built in ``extends``. This is because all the templates take arguments that customise how they display and function, and this isn't possible with Django's standard template tag.

To use Nuit's ``extend`` tag, you must first load the ``nuit`` template tag library::

    {% load nuit %}
    {% extend 'nuit/base.html' %}

For more information about Nuit's ``extend`` tag, see the :doc:`documentation <templatetags>`.

Base Template
-------------

.. _nuit-base:

``nuit/base.html``
~~~~~~~~~~~~~~~~~~

The base template contains the necessary markup to provide the basic framework elements and styling, and include the CSS and Javascript required for the Nuit interface to function. Most of the time, unless you're using one of the generic templates listed below, you'll be extending from ``nuit/base.html`` and overwriting the various blocks you require.

Arguments
^^^^^^^^^

The following arguments can be passed to the ``extend`` tag to change the behaviour of the base template:

.. attribute:: topbar

    :default: ``False``

    Boolean that decides whether to display the :ref:`top-bar` or not.

.. attribute:: leftmenu

    :default: ``False``

    Boolean that decides whether to display the :ref:`left-menu` or not.

.. attribute:: rightmenu

    :default: ``False``

    Boolean that decides whether to display the :ref:`right-menu` or not.

.. attribute:: app_title

    :default: ``None``

    The name of the application. This is displayed in various places, such as the ``<title>`` tag, and as a button on the top bar to take you back to the :attr:`app_url` defined.

.. attribute:: app_url

    :default: ``None``

    The base URL of the application.

Blocks
^^^^^^

The following blocks can be overridden in subsequent templates to customise the content of the template - override these using the standard Django template model::

    {% block block_name %}
    This is my new content
    {% endblock %}

.. note::

    ``{{block.super}}`` may or may not be required depending on the template hierarchy for your particular template. These docs will detail whether this is required for each individual block when extending Nuit's templates directly, but cannot make any guesses if you extend the templates indirectly. If ``super`` is required, these docs will tell you what you will miss if you don't include it.

.. attribute:: title

    :default: 'Home'

    Defines the title of the page, used in the ``<title>`` element.

.. attribute:: content

    :default: Empty

    The main content of the page. The space that this content fills will be determined by the :attr:`topbar`, :attr:`leftmenu` and :attr:`rightmenu` attributes.

    ``{{block.super}}`` is not required for this block when extending ``nuit/base.html`` directly.

.. attribute:: css
    
    :default: Empty

    Allows you to enter CSS ``<link>`` elements or ``<style>`` tags that will be compiled and compressed by Django Compressor.

    ``{{block.super}}`` is not required for this block when extending ``nuit/base.html`` directly.

.. attribute:: scripts

    :default: Empty

    Allows you to enter Javascript ``<script>`` tags that will be included just before the closing ``</body>`` tag.

    ``{{block.super}}`` is not required for this block when extending ``nuit/base.html`` directly.

.. attribute:: top_bar_menu

    :default: Empty

    Allows you to add links to the :ref:`top-bar`. This is only visible when :attr:`topbar` is ``True``. Intended to be used with the ``menu_section`` template tag.

    ``{{block.super}}`` is not required for this block when extending ``nuit/base.html`` directly.

.. attribute:: left_menu

    :default: Empty

    Allows you to add content to the :ref:`left-menu`. This is only visible when :attr:`leftmenu` is ``True``. Intended to be used with the ``menu_section`` template tag.

    ``{{block.super}}`` is not required for this block when extending ``nuit/base.html`` directly.

.. attribute:: right_menu

    :default: Empty

    Allows you to add links to the :ref:`right-menu`. This is only visible when :attr:`rightmenu` is ``True``. Intended to be used with the ``menu_section`` template tag.

    ``{{block.super}}`` is not required for this block when extending ``nuit/base.html`` directly.

Generic Templates
-----------------

Nuit's generic templates provide the front-end detail for common operations, such as listing objects. These tend to go hand-in-hand with Django's `Generic Views`_.

.. _`Generic Views`: https://docs.djangoproject.com/en/dev/topics/class-based-views/generic-display/

.. _list-template:

``nuit/generic/list.html``
~~~~~~~~~~~~~~~~~~~~~~~~~~

Displays a list of objects, linking to their `detail URL`_, with options for pagination and filtering. This is designed to be used with Nuit's :ref:`SearchableListView`.

.. _`detail URL`: https://docs.djangoproject.com/en/dev/ref/models/instances/#get-absolute-url

Arguments
^^^^^^^^^

The following arguments can be passed to the ``extend`` tag to change the behaviour of the list template:

.. attribute:: base

    :default: 'nuit/base.html'

    Defines the template which `nuit/generic/list.html` will extend. This defaults to Nuit's base, but in most cases you will have made customisations (such as menu items etc.) to your own base template, and need this template to extend your own.

.. attribute:: search_verb

    :default: 'Search'

    Defines the verb to be displayed on the submit button of the search form, if applicable.

Blocks
^^^^^^

The following blocks can be overridden in subsequent templates to customise the behaviour of the template. All blocks that are included in the template hierarchy are also available - by default, this means all blocks available in :ref:`nuit-base`.

.. note::
    
    As always, the best way to override these blocks is to look at the source code for ``nuit/generic/list.html``. This will give you a good idea about how Nuit implements parts of the template, and therefore a good indication of what is required if you wish to override the blocks.

.. attribute:: title

    :default: 'List of Objects'

    Defines the title of the page, used in an ``<h1>`` element and in the ``<title>``.

.. attribute:: search_query

    :default: '*x* results for *search_term*'

    Displays above the list of objects.

.. attribute:: object_list

    :default: an unordered list containing a list of the elements for that page.
